// <auto-generated />
using System;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;
using ReservationSystem.Scheduling.Infrastructure.EntityFramework;

namespace ReservationSystem.Scheduling.Infrastructure.Migrations
{
    [DbContext(typeof(SchedulingContext))]
    [Migration("20201209144322_init")]
    partial class init
    {
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "3.1.9")
                .HasAnnotation("Relational:MaxIdentifierLength", 128)
                .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

            modelBuilder.Entity("ReservationSystem.Base.Services.Outbox.EntityFramework.Entities.OutboxMessage", b =>
                {
                    b.Property<long>("OutboxMessageId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("bigint")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<string>("AssemblyName")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("FullNameMessageType")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<Guid>("MessageId")
                        .HasColumnType("uniqueidentifier");

                    b.Property<string>("ObjectId")
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateTime>("OccurredOn")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("datetime2")
                        .HasDefaultValueSql("GETDATE()");

                    b.Property<DateTime?>("SentDate")
                        .IsConcurrencyToken()
                        .HasColumnType("datetime2");

                    b.Property<string>("SerializedMessage")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("OutboxMessageId");

                    b.ToTable("OutboxMessages","Outbox");
                });

            modelBuilder.Entity("ReservationSystem.Scheduling.Domain.DailySchedule.DailySchedule", b =>
                {
                    b.Property<Guid>("ScheduleId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier");

                    b.Property<DateTime>("CreatedDate")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("datetime2")
                        .HasDefaultValueSql("GETDATE()");

                    b.Property<long>("ServiceId")
                        .HasColumnType("bigint");

                    b.Property<byte[]>("Timestamp")
                        .IsConcurrencyToken()
                        .ValueGeneratedOnAddOrUpdate()
                        .HasColumnType("rowversion");

                    b.HasKey("ScheduleId");

                    b.ToTable("DailySchedules","Scheduling");
                });

            modelBuilder.Entity("ReservationSystem.Scheduling.Domain.ScheduledDates.ScheduledDate", b =>
                {
                    b.Property<Guid>("DateId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier");

                    b.Property<DateTime>("CreatedDate")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("datetime2")
                        .HasDefaultValueSql("GETDATE()");

                    b.Property<DateTime>("EndDateTime")
                        .HasColumnType("datetime2");

                    b.Property<Guid>("ScheduleId")
                        .HasColumnType("uniqueidentifier");

                    b.Property<DateTime>("StartDateTime")
                        .HasColumnType("datetime2");

                    b.Property<int>("Status")
                        .HasColumnType("int");

                    b.HasKey("DateId");

                    b.HasIndex("ScheduleId");

                    b.ToTable("ScheduledDates","Scheduling");
                });

            modelBuilder.Entity("ReservationSystem.Scheduling.Domain.DailySchedule.DailySchedule", b =>
                {
                    b.OwnsOne("ReservationSystem.Base.Domain.ValueObjects.Day.Date", "Day", b1 =>
                        {
                            b1.Property<Guid>("DailyScheduleScheduleId")
                                .HasColumnType("uniqueidentifier");

                            b1.Property<int>("Day")
                                .HasColumnName("Day")
                                .HasColumnType("int");

                            b1.Property<int>("Month")
                                .HasColumnName("Month")
                                .HasColumnType("int");

                            b1.Property<int>("Year")
                                .HasColumnName("Year")
                                .HasColumnType("int");

                            b1.HasKey("DailyScheduleScheduleId");

                            b1.ToTable("DailySchedules");

                            b1.WithOwner()
                                .HasForeignKey("DailyScheduleScheduleId");
                        });
                });

            modelBuilder.Entity("ReservationSystem.Scheduling.Domain.ScheduledDates.ScheduledDate", b =>
                {
                    b.HasOne("ReservationSystem.Scheduling.Domain.DailySchedule.DailySchedule", null)
                        .WithMany("Dates")
                        .HasForeignKey("ScheduleId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.OwnsOne("ReservationSystem.Base.Domain.ValueObjects.TimeSlot.TimeSlot", "TimeSlot", b1 =>
                        {
                            b1.Property<Guid>("ScheduledDateDateId")
                                .HasColumnType("uniqueidentifier");

                            b1.Property<TimeSpan>("EndTime")
                                .HasColumnName("EndTime")
                                .HasColumnType("time");

                            b1.Property<TimeSpan>("StartTime")
                                .HasColumnName("StartTime")
                                .HasColumnType("time");

                            b1.HasKey("ScheduledDateDateId");

                            b1.ToTable("ScheduledDates");

                            b1.WithOwner()
                                .HasForeignKey("ScheduledDateDateId");
                        });
                });
#pragma warning restore 612, 618
        }
    }
}
